1e-12 < .0000000001
1e-11 < .0000000001
1e-10 == .0000000001
wilcox.test(data$uAE[data$Cond != 'BD'], as.numeric(data$Cond[data$Cond != 'BD']), paired=FALSE)
wilcox.test(data$uFE[data$Cond != 'BD'], as.numeric(data$Cond[data$Cond != 'BD']), paired=FALSE)
library('psych')
library('tidyr')
library('rstatix')
library('lm.beta')
library('kableExtra')
library('effectsize')
# paths
usrPath <- '/Users/bear/Downloads' # change to your local
wdPath <- file.path(usrPath, 'dynamic_contrast', 'analysis_psychophysics')
fitPath <- file.path(usrPath, 'dynamic_contrast', 'fitdata_psychophysics',
'psychophysics_fits.csv')
funcPath <- file.path(usrPath, 'dynamic_contrast', 'r_helper_functions.R')
# sourcing r_helper_functions has all the functions needed for analysis,
# also sets plot colors/pchs
setwd(wdPath)
source(funcPath)
load('descriptives_psychophysics.RData')
# loads data frame called, imaginatively, data
fitdata <- read.csv(fitPath)
data <- merge(data,fitdata, by = 'sID')
data$group <- factor(data$group)
# map between left/right and amb/fellow
data[,c('acuityAE', 'acuityFE')] <- map2amb(data$acuityLE, data$acuityRE, data$AE)
data[,c('AULCSF_AE', 'AULCSF_FE')] <- map2amb(data$l.AULCSF, data$r.AULCSF, data$AE)
data[,c('sens2cpd_AE', 'sens2cpd_FE')] <- map2amb(data$l.sens2cpd, data$r.sens2cpd, data$AE)
data[,c('LS', 'LS_fellow')] <- map2amb(data$LS_LE, data$LS_RE, data$AE)
data$IODacuity <- abs(data$acuityAE - data$acuityFE)
# bino summation/inhibition:  best minus bino (negative = inhibition, positive = summation)
data$bino_acuity_summation = apply(
data[,c('acuityLE', 'acuityRE')], 1, FUN=min) - data$acuityBE
data$AULCSF_summation = data$b.AULCSF / apply(data[,c('AULCSF_AE', 'AULCSF_FE')], 1, FUN=max)
# clean descriptives not used in analysis - remove from this list to keep
data <- subset(data, select = -c(
animals, shapes, diff_proportion,
LE_1cpd, RE_1cpd,
LE_2cpd, RE_2cpd,
LE_4cpd, RE_4cpd,
LE_8cpd, RE_8cpd,
LS_fellow,
l.AULCSF, r.AULCSF,
b.peakgain, l.peakgain, r.peakgain,
b.peakfreq, l.peakfreq, r.peakfreq,
b.bandwidth, l.bandwidth, r.bandwidth,
b.truncation, l.truncation, r.truncation,
l.sens2cpd, r.sens2cpd,
b.highSFcutoff, l.highSFcutoff, r.highSFcutoff,
LS_RE, LS_LE))
# clean workspace
rm(fitdata)
altPath <- file.path(usrPath, 'dynamic_contrast', 'fitdata_psychophysics',
'psychophysics_altmodels_fits.csv')
altdata <- read.csv(altPath)
altdata$group <- factor(altdata$group)
View(altdata)
names(altdata)
altdata_long <- gather(altdata, modeltype, mse, c(3,11,12,13))
altdata_long <- gather(altdata, modeltype, mse, c(3,11,12,13))
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
View(altdata_long)
desc_matrix <- groupMeans(altdata_long$mse, altdata_long$) # helper function below
names(altdata)
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
names(altdata_long)
c(3:6)
altdata_long <- gather(altdata, modeltype, mse, c(3:6))
View(altdata_long)
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
altdata_long <- gather(altdata_long, modeltype, mse, c(3:6))
View(altdata_long)
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
roundto <- 3
softmax <- printMeansAndSDs(altdata$softmax, altdata$group, roundto)
stimmax <- printMeansAndSDs(altdata$simpleMax, altdata$group, roundto)
rivalry <- printMeansAndSDs(altdata$rivalry, altdata$group, roundto)
dualnul <- printMeansAndSDs(altdata$dualMeanNull, altdata$group, roundto)
softmax
tmp <- groupMeans(altdata_long$mse, altdata_long$modeltype)
modelMeans <- function(data) {
means <- colMeans(data[,3:length(data)])
sds <- sapply(data[,3:length(data)], sd)
n <- nrow(data)
ses <- sds/sqrt(n)
descriptives <- rbind(means,ses)
rownames(descriptives) <- c('mean', 'stderr')
return(descriptives)
}
tmp <- modelMeans(altdata)
tmp
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:6))
descriptives
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
drawlinesX <- c(1, 1)
for (i in 2:nrow(descriptives)) {
drawlinesX <- c(drawlinesX, NA, i, i)
}
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
for (i in 2:nrow(descriptives)) {
drawlinesY <- c(drawlinesY,
NA,
descriptives[i, 1] + descriptives[i, 2],
descriptives[i, 1] - descriptives[i, 2])
}
lines(drawlinesX, drawlinesY, col="black", lwd=3)
points(c(1:4)-offset , descriptives[,1],
pch = 16,
col = 'black',
cex = 1.5)
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
drawlinesX
nrow(descriptives)
modelMeans <- function(data) {
means <- colMeans(data[,3:length(data)])
sds <- sapply(data[,3:length(data)], sd)
n <- nrow(data)
ses <- sds/sqrt(n)
descriptives <- rbind(means,ses)
rownames(descriptives) <- c('mean', 'stderr')
descriptives <- as.data.frame(t(descriptives))
descriptives$modNames <-
factor(rownames(descriptives), levels = rownames(descriptives))
return(descriptives)
}
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
descriptives <- modelMeans(altdata_long)
descriptives <- as.data.frame(t(descriptives))
descriptives$modNames <-
factor(rownames(descriptives), levels = rownames(descriptives))
altdata_long <- gather(altdata_long, modeltype, mse, c(3:6))
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
drawlinesX <- c(1, 1)
for (i in 2:nrow(descriptives)) {
drawlinesX <- c(drawlinesX, NA, i, i)
}
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
descriptives
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:6))
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
drawlinesX <- c(1, 1)
for (i in 2:nrow(descriptives)) {
drawlinesX <- c(drawlinesX, NA, i, i)
}
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
for (i in 2:nrow(descriptives)) {
drawlinesY <- c(drawlinesY,
NA,
descriptives[i, 1] + descriptives[i, 2],
descriptives[i, 1] - descriptives[i, 2])
}
descriptives
lines(drawlinesX, drawlinesY, col="black", lwd=3)
points(c(1:4)-offset , descriptives[,1],
pch = 16,
col = 'black',
cex = 1.5)
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Maximum', 'Rivalry', 'Dual-Mean Null'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,4.5+offset),
ylim = c(0, 0.4),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
drawlinesX <- c(1, 1)
for (i in 2:nrow(descriptives)) {
drawlinesX <- c(drawlinesX, NA, i, i)
}
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
for (i in 2:nrow(descriptives)) {
drawlinesY <- c(drawlinesY,
NA,
descriptives[i, 1] + descriptives[i, 2],
descriptives[i, 1] - descriptives[i, 2])
}
lines(drawlinesX, drawlinesY, col="black", lwd=3)
points(c(1:4)-offset , descriptives[,1],
pch = 16,
col = 'black',
cex = 1)
names(altdata)
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long
head(altdata_long)
descriptives
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:10))
offset <- 0.2
stripchart(
round(data_long$mse,2) ~ data_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 0.9),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:10))
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 0.9),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
drawlinesX <- c(1, 1)
for (i in 2:nrow(descriptives)) {
drawlinesX <- c(drawlinesX, NA, i, i)
}
drawlinesX <- drawlinesX - offset
drawlinesY <- c(descriptives[1, 1] + descriptives[1, 2],
descriptives[1, 1] - descriptives[1, 2])
for (i in 2:nrow(descriptives)) {
drawlinesY <- c(drawlinesY,
NA,
descriptives[i, 1] + descriptives[i, 2],
descriptives[i, 1] - descriptives[i, 2])
}
lines(drawlinesX, drawlinesY, col="black", lwd=3)
points(c(1:8)-offset , descriptives[,1],
pch = 16,
col = 'black',
cex = 1.5)
max(altdata_long$mse)
modelMeans <- function(data) {
means <- colMeans(data[,3:length(data)])
sds <- sapply(data[,3:length(data)], sd)
n <- nrow(data)
ses <- sds/sqrt(n)
descriptives <- rbind(means,ses)
rownames(descriptives) <- c('mean', 'stderr')
descriptives <- as.data.frame(t(descriptives))
descriptives$modNames <-
factor(rownames(descriptives), levels = rownames(descriptives))
return(descriptives)
}
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:10))
names(altdata)
names(altdata_long)
descriptives
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 1),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
altdata_long
head(altdata_long)
View(altdata_long)
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 1),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype)
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype, vertical=TRUE)
levels(altdata_long$modeltype)
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:10))
altdata_long$modeltype <- factor(altdata_long$modeltype)
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 1),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
altdata_long
levels(altdata_long$modeltype)
descriptives
descriptives$modNames
levels(descriptives$modNames)
altdata_long <- subset(altdata, select = c(
sID, group, softmax, meanJoystick, simpleAverage,
weightedAverage, softmax_tau, ds2006,
ds2006_tau, bmg2007))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:10))
altdata_long$modeltype <- factor(altdata_long$modeltype, levels = levels(descriptives$modNames))
offset <- 0.2
stripchart(
round(altdata_long$mse,2) ~ altdata_long$modeltype,
group.names = c('A+N', 'Mean', 'Average', 'Weighted',
'A+N, tau', 'DSKL', 'DSKL, tau', 'Two-stage'),
# xlab = ' ',
ylab = 'MSE',
xlim = c(0.5,8.5+offset),
ylim = c(0, 1),
method = 'jitter',
offset = 0.5,
pch = 16,
col = rgb(.1, .1, .1, .4),
# bg = rgb(.1, .1, .1, .1),
vertical = TRUE,
cex.axis = 0.9,
cex.lab = 1.2
)
grid(nx = NA, ny = NULL)
altdata_long <- subset(altdata, select = c(
sID, group, softmax,
simpleMax, rivalry,
dualMeanNull))
descriptives <- modelMeans(altdata_long)
altdata_long <- gather(altdata_long, modeltype, mse, c(3:6))
altdata_long$modeltype <- factor(altdata_long$modeltype, levels = levels(descriptives$modNames))
max(altdata_long$mse)
