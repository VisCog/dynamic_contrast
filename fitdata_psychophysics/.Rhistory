n <- 10^nDigits
return(ceiling(x*n)/n)
}
floor_round <- function(x, nDigits) {
# floors to the nearest n digits
n <- 10^nDigits
return(floor(x*n)/n)
}
## colours & pchs
grey_transp <- rgb(.1, .1, .1, .1)
colAM <- rgb(1,0,0, alpha = 0.6)
colNS <- rgb(0,0,1, alpha = 0.6)
colBD <- rgb(0,.5, 0, alpha = 0.6)
pchAM <- 16
pchNS <- 18
pchBD <- 15
colAM_solid <- rgb(1,0,0)
colNS_solid <- rgb(0,0,1)
colBD_solid <- rgb(0,.5,0)
# mu:
ylims <- c(floor_round(min(c(data$uAE, data$uFE), na.rm = TRUE), 1),
ceil_round(max(c(data$uAE, data$uFE), na.rm = TRUE), 1))
stripchart_w_means_byeye(data$uAE, data$uFE,
data$group, data$group, 'u', ylims)
ylims
muOutliers <- FALSE
outlierCrit <- 1
tmp <- c(data$uAE, data$uFE)
tmp
tmp_scaled <- scale(tmp)
tmp_scaled
any(tmp_scaled > outlierCrit)
tmp_scaled > outlierCrit
tmp[1]
tmp[2]
outlierCrit <- 2
tmp <- c(data$uAE, data$uFE)
tmp_scaled <- scale(tmp)
any(tmp_scaled > 2)
tmp[tmp_scaled > outlierCrit]
floor(min(tmp[tmp_scaled > outlierCrit], na.rm = TRUE))
printMeansAndSDs <- function(dvColumn, groupColumn, roundto) {
m_AM <- mean(dvColumn[groupColumn=='AM'], na.rm=T)
sd_AM <- sd(dvColumn[groupColumn=='AM'], na.rm=T)
m_BD <- mean(dvColumn[groupColumn=='BD'], na.rm=T)
sd_BD <- sd(dvColumn[groupColumn=='BD'], na.rm=T)
m_NS <- mean(dvColumn[groupColumn=='NS'], na.rm=T)
sd_NS <- sd(dvColumn[groupColumn=='NS'], na.rm=T)
output1 <- paste0('Control: ', round(m_NS,roundto), ' (', round(sd_NS,roundto), ')')
output2 <- paste0('Amblyopia: ', round(m_AM,roundto), ' (', round(sd_AM,roundto), ')')
output3 <- paste0('Strabismus with equal acuity: ', round(m_BD,2), ' (', round(sd_BD,roundto), ')')
return(list(output1,output2,output3))
}
kae_means <- printMeansAndSDs(data$kAE, data$group, 2)
kae_means
kae_means[[1]]
kae_means[[2]]
printTTestResult <- function(dvColumn, groupColumn) {
# t(14.52) = 4.79, p < 0.0001; Glass’s ∆ = 5.10
t_result <- t.test(dvColumn[groupColumn=='AM'], dvColumn[groupColumn=='NS'])
gd <- glass_delta(dvColumn[groupColumn=='AM'], dvColumn[groupColumn=='NS'])
if (t_result$p.value < 0.0001) {
pstring <- 'p < 0.0001'
} else {
pstring <- paste('p =', signif(t_result$p.value,2))
}
out1 <- paste0("t(", round(t_result$parameter,1),
") = ", abs(round(t_result$statistic,2)),
", ", pstring,
"; Glass's ∆ = ", abs(round(gd$Glass_delta,2)))
return(list(out1, pstring))
}
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
uae_means
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
printAnovaByEyeTable <- function(data, selectCols) {
#  example selectCols = c('uAE', 'uFE')
# assumes your condition/group var is called Cond
data_subset <- subset(data, select = c('sID', 'Cond', selectCols))
#  subset out the BD data
data_subset <- subset(data_subset, Cond != 'BD')
data_subset$Cond <- droplevels(data_subset$Cond)
data_long <- gather(data_subset, eye, value, 3:4)
data_long$sID <- factor(data_long$sID)
data_long$eye <- factor(data_long$eye)
res.aov <- anova_test(data=data_long, dv=value, wid = sID, between = Cond, within = eye)
tmp <- get_anova_table(res.aov)
posthoc1 <- data_long %>% group_by(eye) %>%
anova_test(dv = value, wid = sID, between = Cond) %>%
get_anova_table() %>%
adjust_pvalue(method = 'bonferroni')
indGrp <- which(tmp[,'Effect'] == 'Cond')
indEye <- which(tmp[,'Effect'] == 'eye')
indIxn <- which(tmp[,'Effect'] == 'Cond:eye')
# build text output
if (tmp[indGrp,'p'] < 0.05) {
# sig
strGrp <- 'Main effect of group'
} else {
# non-sig
strGrp <- 'No main effect of group'
}
if (tmp[indGrp,'p'] < 0.0001) {
pGrp <- 'p < 0.0001'
} else {
pGrp <- paste('p =', signif(tmp[indGrp,'p'],2))
}
if (tmp[indEye,'p'] < 0.05) {
# sig
strEye <- 'main effect of eye'
} else {
# non-sig
strEye <- 'no main effect of eye'
}
if (tmp[indEye,'p'] < 0.0001) {
pEye <- 'p < 0.0001'
} else {
pEye <- paste('p =', signif(tmp[indEye,'p'],2))
}
if (tmp[indIxn,'p'] < 0.05) {
# sig
strIxn <- 'a significant group by eye interaction'
} else {
# non-sig
strIxn <- 'no group by eye interaction'
}
if (tmp[indIxn,'p'] < 0.0001) {
pIxn <- 'p < 0.0001'
} else {
pIxn <- paste('p =', signif(tmp[indIxn,'p'],2))
}
# posthoc: eye 1
if (posthoc1$p[1] < 0.05) {
# sig
strPh1 <- paste('difference in', selectCols[1])
} else {
# non-sig
strPh1 <- paste('no difference in', selectCols[1])
}
if (posthoc1$p[1] < 0.0001) {
pPh1 <- 'p < 0.0001'
} else {
pPh1 <- paste('p =', signif(posthoc1$p[1],2))
}
# posthoc: eye 2
if (posthoc1$p[2] < 0.05) {
# sig
strPh2 <- paste('difference in', selectCols[2])
} else {
# non-sig
strPh2 <- paste('no difference in', selectCols[2])
}
if (posthoc1$p[2] < 0.0001) {
pPh2 <- 'p < 0.0001'
} else {
pPh2 <- paste('p =', signif(posthoc1$p[2],2))
}
out1 <- paste0(strGrp, ", F(", tmp[indGrp,'DFn'], ",", tmp[indGrp,'DFd'],
") = ", round(tmp[indGrp,'F'],2), ", ", pGrp, ",
genEtaSq = ", signif(tmp[indGrp, 'ges'],2), ";")
out2 <- paste0(strEye, ", F(", tmp[indEye,'DFn'], ",", tmp[indEye,'DFd'],
") = ", round(tmp[indEye,'F'],2), ", ", pEye,
", genEtaSq = ", signif(tmp[indEye, 'ges'],2), ";")
out3 <- paste0(strIxn, ", F(", tmp[indIxn,'DFn'], ",", tmp[indIxn,'DFd'],
") = ", round(tmp[indIxn,'F'],2), ", ", pIxn, ",
genEtaSq = ", signif(tmp[indIxn, 'ges'],2), ".")
out4 <- paste0("Simple main effects: ", strPh1, ",
F(", posthoc1[1,'DFn'], ",", posthoc1[1,'DFd'],
") = ", round(posthoc1[1,'F'],2), ", ", pPh1,
", genEtaSq = ", signif(posthoc1[1, 'ges'],2), ";")
out5 <- paste0(strPh2, ", F(", posthoc1[2,'DFn'], ",", posthoc1[2,'DFd'],
") = ", round(posthoc1[2,'F'],2), ", ", pPh2,
", genEtaSq = ", signif(posthoc1[2, 'ges'],2), ".")
returnStr <- paste(out1,out2,out3,out4,out5)
return(list(returnStr, pGrp, pEye, pIxn, pPh1, pPh2))
}
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
printAnovaByEyeTable <- function(data, selectCols) {
#  example selectCols = c('uAE', 'uFE')
# assumes your condition/group var is called group
data_subset <- subset(data, select = c('sID', 'group', selectCols))
#  subset out the BD data
data_subset <- subset(data_subset, group != 'BD')
data_subset$Cond <- droplevels(data_subset$group)
data_long <- gather(data_subset, eye, value, 3:4)
data_long$sID <- factor(data_long$sID)
data_long$eye <- factor(data_long$eye)
res.aov <- anova_test(data=data_long, dv=value, wid = sID, between = group, within = eye)
tmp <- get_anova_table(res.aov)
posthoc1 <- data_long %>% group_by(eye) %>%
anova_test(dv = value, wid = sID, between = group) %>%
get_anova_table() %>%
adjust_pvalue(method = 'bonferroni')
indGrp <- which(tmp[,'Effect'] == 'group')
indEye <- which(tmp[,'Effect'] == 'eye')
indIxn <- which(tmp[,'Effect'] == 'group:eye')
# build text output
if (tmp[indGrp,'p'] < 0.05) {
# sig
strGrp <- 'Main effect of group'
} else {
# non-sig
strGrp <- 'No main effect of group'
}
if (tmp[indGrp,'p'] < 0.0001) {
pGrp <- 'p < 0.0001'
} else {
pGrp <- paste('p =', signif(tmp[indGrp,'p'],2))
}
if (tmp[indEye,'p'] < 0.05) {
# sig
strEye <- 'main effect of eye'
} else {
# non-sig
strEye <- 'no main effect of eye'
}
if (tmp[indEye,'p'] < 0.0001) {
pEye <- 'p < 0.0001'
} else {
pEye <- paste('p =', signif(tmp[indEye,'p'],2))
}
if (tmp[indIxn,'p'] < 0.05) {
# sig
strIxn <- 'a significant group by eye interaction'
} else {
# non-sig
strIxn <- 'no group by eye interaction'
}
if (tmp[indIxn,'p'] < 0.0001) {
pIxn <- 'p < 0.0001'
} else {
pIxn <- paste('p =', signif(tmp[indIxn,'p'],2))
}
# posthoc: eye 1
if (posthoc1$p[1] < 0.05) {
# sig
strPh1 <- paste('difference in', selectCols[1])
} else {
# non-sig
strPh1 <- paste('no difference in', selectCols[1])
}
if (posthoc1$p[1] < 0.0001) {
pPh1 <- 'p < 0.0001'
} else {
pPh1 <- paste('p =', signif(posthoc1$p[1],2))
}
# posthoc: eye 2
if (posthoc1$p[2] < 0.05) {
# sig
strPh2 <- paste('difference in', selectCols[2])
} else {
# non-sig
strPh2 <- paste('no difference in', selectCols[2])
}
if (posthoc1$p[2] < 0.0001) {
pPh2 <- 'p < 0.0001'
} else {
pPh2 <- paste('p =', signif(posthoc1$p[2],2))
}
out1 <- paste0(strGrp, ", F(", tmp[indGrp,'DFn'], ",", tmp[indGrp,'DFd'],
") = ", round(tmp[indGrp,'F'],2), ", ", pGrp, ",
genEtaSq = ", signif(tmp[indGrp, 'ges'],2), ";")
out2 <- paste0(strEye, ", F(", tmp[indEye,'DFn'], ",", tmp[indEye,'DFd'],
") = ", round(tmp[indEye,'F'],2), ", ", pEye,
", genEtaSq = ", signif(tmp[indEye, 'ges'],2), ";")
out3 <- paste0(strIxn, ", F(", tmp[indIxn,'DFn'], ",", tmp[indIxn,'DFd'],
") = ", round(tmp[indIxn,'F'],2), ", ", pIxn, ",
genEtaSq = ", signif(tmp[indIxn, 'ges'],2), ".")
out4 <- paste0("Simple main effects: ", strPh1, ",
F(", posthoc1[1,'DFn'], ",", posthoc1[1,'DFd'],
") = ", round(posthoc1[1,'F'],2), ", ", pPh1,
", genEtaSq = ", signif(posthoc1[1, 'ges'],2), ";")
out5 <- paste0(strPh2, ", F(", posthoc1[2,'DFn'], ",", posthoc1[2,'DFd'],
") = ", round(posthoc1[2,'F'],2), ", ", pPh2,
", genEtaSq = ", signif(posthoc1[2, 'ges'],2), ".")
returnStr <- paste(out1,out2,out3,out4,out5)
return(list(returnStr, pGrp, pEye, pIxn, pPh1, pPh2))
}
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
library('tidyr')
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
library('rstatix')
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
u_stats
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
uae_means
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
print('u_AE mean (SD):')
for (p in 1:3) {
print(paste(' - u_AE: ', uae_means[[p]]))
print(paste(' - u_FE: ', ufe_means[[p]]))
}
u_stats
u_stats[[1]]
printAnovaByEyeTable <- function(data, selectCols) {
#  example selectCols = c('uAE', 'uFE')
# assumes your condition/group var is called group
data_subset <- subset(data, select = c('sID', 'group', selectCols))
#  subset out the BD data
data_subset <- subset(data_subset, group != 'BD')
data_subset$Cond <- droplevels(data_subset$group)
data_long <- gather(data_subset, eye, value, 3:4)
data_long$sID <- factor(data_long$sID)
data_long$eye <- factor(data_long$eye)
res.aov <- anova_test(data=data_long, dv=value, wid = sID, between = group, within = eye)
tmp <- get_anova_table(res.aov)
posthoc1 <- data_long %>% group_by(eye) %>%
anova_test(dv = value, wid = sID, between = group) %>%
get_anova_table() %>%
adjust_pvalue(method = 'bonferroni')
indGrp <- which(tmp[,'Effect'] == 'group')
indEye <- which(tmp[,'Effect'] == 'eye')
indIxn <- which(tmp[,'Effect'] == 'group:eye')
# build text output
if (tmp[indGrp,'p'] < 0.05) {
# sig
strGrp <- 'Main effect of group'
} else {
# non-sig
strGrp <- 'No main effect of group'
}
if (tmp[indGrp,'p'] < 0.0001) {
pGrp <- 'p < 0.0001'
} else {
pGrp <- paste('p =', signif(tmp[indGrp,'p'],2))
}
if (tmp[indEye,'p'] < 0.05) {
# sig
strEye <- 'main effect of eye'
} else {
# non-sig
strEye <- 'no main effect of eye'
}
if (tmp[indEye,'p'] < 0.0001) {
pEye <- 'p < 0.0001'
} else {
pEye <- paste('p =', signif(tmp[indEye,'p'],2))
}
if (tmp[indIxn,'p'] < 0.05) {
# sig
strIxn <- 'a significant group by eye interaction'
} else {
# non-sig
strIxn <- 'no group by eye interaction'
}
if (tmp[indIxn,'p'] < 0.0001) {
pIxn <- 'p < 0.0001'
} else {
pIxn <- paste('p =', signif(tmp[indIxn,'p'],2))
}
# posthoc: eye 1
if (posthoc1$p[1] < 0.05) {
# sig
strPh1 <- paste('difference in', selectCols[1])
} else {
# non-sig
strPh1 <- paste('no difference in', selectCols[1])
}
if (posthoc1$p[1] < 0.0001) {
pPh1 <- 'p < 0.0001'
} else {
pPh1 <- paste('p =', signif(posthoc1$p[1],2))
}
# posthoc: eye 2
if (posthoc1$p[2] < 0.05) {
# sig
strPh2 <- paste('difference in', selectCols[2])
} else {
# non-sig
strPh2 <- paste('no difference in', selectCols[2])
}
if (posthoc1$p[2] < 0.0001) {
pPh2 <- 'p < 0.0001'
} else {
pPh2 <- paste('p =', signif(posthoc1$p[2],2))
}
out1 <- paste0(strGrp, ", F(", tmp[indGrp,'DFn'], ",", tmp[indGrp,'DFd'],
") = ", round(tmp[indGrp,'F'],2), ", ", pGrp, ", genEtaSq = ", signif(tmp[indGrp, 'ges'],2), ";")
out2 <- paste0(strEye, ", F(", tmp[indEye,'DFn'], ",", tmp[indEye,'DFd'],
") = ", round(tmp[indEye,'F'],2), ", ", pEye,
", genEtaSq = ", signif(tmp[indEye, 'ges'],2), ";")
out3 <- paste0(strIxn, ", F(", tmp[indIxn,'DFn'], ",", tmp[indIxn,'DFd'],
") = ", round(tmp[indIxn,'F'],2), ", ", pIxn, ", genEtaSq = ", signif(tmp[indIxn, 'ges'],2), ".")
out4 <- paste0("Simple main effects: ", strPh1, ",
F(", posthoc1[1,'DFn'], ",", posthoc1[1,'DFd'],
") = ", round(posthoc1[1,'F'],2), ", ", pPh1,
", genEtaSq = ", signif(posthoc1[1, 'ges'],2), ";")
out5 <- paste0(strPh2, ", F(", posthoc1[2,'DFn'], ",", posthoc1[2,'DFd'],
") = ", round(posthoc1[2,'F'],2), ", ", pPh2,
", genEtaSq = ", signif(posthoc1[2, 'ges'],2), ".")
returnStr <- paste(out1,out2,out3,out4,out5)
return(list(returnStr, out1, out2, out3, out4, out5))
}
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
u_stats
printAnovaByEyeTable <- function(data, selectCols) {
#  example selectCols = c('uAE', 'uFE')
# assumes your condition/group var is called group
data_subset <- subset(data, select = c('sID', 'group', selectCols))
#  subset out the BD data
data_subset <- subset(data_subset, group != 'BD')
data_subset$Cond <- droplevels(data_subset$group)
data_long <- gather(data_subset, eye, value, 3:4)
data_long$sID <- factor(data_long$sID)
data_long$eye <- factor(data_long$eye)
res.aov <- anova_test(data=data_long, dv=value, wid = sID, between = group, within = eye)
tmp <- get_anova_table(res.aov)
posthoc1 <- data_long %>% group_by(eye) %>%
anova_test(dv = value, wid = sID, between = group) %>%
get_anova_table() %>%
adjust_pvalue(method = 'bonferroni')
indGrp <- which(tmp[,'Effect'] == 'group')
indEye <- which(tmp[,'Effect'] == 'eye')
indIxn <- which(tmp[,'Effect'] == 'group:eye')
# build text output
if (tmp[indGrp,'p'] < 0.05) {
# sig
strGrp <- 'Main effect of group'
} else {
# non-sig
strGrp <- 'No main effect of group'
}
if (tmp[indGrp,'p'] < 0.0001) {
pGrp <- 'p < 0.0001'
} else {
pGrp <- paste('p =', signif(tmp[indGrp,'p'],2))
}
if (tmp[indEye,'p'] < 0.05) {
# sig
strEye <- 'main effect of eye'
} else {
# non-sig
strEye <- 'no main effect of eye'
}
if (tmp[indEye,'p'] < 0.0001) {
pEye <- 'p < 0.0001'
} else {
pEye <- paste('p =', signif(tmp[indEye,'p'],2))
}
if (tmp[indIxn,'p'] < 0.05) {
# sig
strIxn <- 'a significant group by eye interaction'
} else {
# non-sig
strIxn <- 'no group by eye interaction'
}
if (tmp[indIxn,'p'] < 0.0001) {
pIxn <- 'p < 0.0001'
} else {
pIxn <- paste('p =', signif(tmp[indIxn,'p'],2))
}
# posthoc: eye 1
if (posthoc1$p[1] < 0.05) {
# sig
strPh1 <- paste('difference in', selectCols[1])
} else {
# non-sig
strPh1 <- paste('no difference in', selectCols[1])
}
if (posthoc1$p[1] < 0.0001) {
pPh1 <- 'p < 0.0001'
} else {
pPh1 <- paste('p =', signif(posthoc1$p[1],2))
}
# posthoc: eye 2
if (posthoc1$p[2] < 0.05) {
# sig
strPh2 <- paste('difference in', selectCols[2])
} else {
# non-sig
strPh2 <- paste('no difference in', selectCols[2])
}
if (posthoc1$p[2] < 0.0001) {
pPh2 <- 'p < 0.0001'
} else {
pPh2 <- paste('p =', signif(posthoc1$p[2],2))
}
out1 <- paste0(strGrp, ", F(", tmp[indGrp,'DFn'], ",", tmp[indGrp,'DFd'],
") = ", round(tmp[indGrp,'F'],2), ", ", pGrp, ", ges = ", signif(tmp[indGrp, 'ges'],2))
out2 <- paste0(strEye, ", F(", tmp[indEye,'DFn'], ",", tmp[indEye,'DFd'],
") = ", round(tmp[indEye,'F'],2), ", ", pEye,
", ges = ", signif(tmp[indEye, 'ges'],2))
out3 <- paste0(strIxn, ", F(", tmp[indIxn,'DFn'], ",", tmp[indIxn,'DFd'],
") = ", round(tmp[indIxn,'F'],2), ", ", pIxn, ", ges = ", signif(tmp[indIxn, 'ges'],2))
out4 <- paste0("Simple main effects: ", strPh1,
", F(", posthoc1[1,'DFn'], ",", posthoc1[1,'DFd'],
") = ", round(posthoc1[1,'F'],2), ", ", pPh1,
", ges = ", signif(posthoc1[1, 'ges'],2), ";")
out5 <- paste0("Simple main effects: ", strPh2, ", F(", posthoc1[2,'DFn'], ",", posthoc1[2,'DFd'],
") = ", round(posthoc1[2,'F'],2), ", ", pPh2,
", ges = ", signif(posthoc1[2, 'ges'],2), ".")
returnStr <- paste(out1,out2,out3,out4,out5)
return(list(returnStr, out1, out2, out3, out4, out5))
}
uae_means <- printMeansAndSDs(data$uAE, data$group, 2)
ufe_means <- printMeansAndSDs(data$uFE, data$group, 2)
u_stats <- printAnovaByEyeTable(data, c('uAE', 'uFE'))
u_stats
